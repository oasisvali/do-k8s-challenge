# Copied from https://github.com/bitnami/charts/blob/master/bitnami/nginx-ingress-controller/values.yaml

## @section Nginx Ingress Controller parameters

## Bitnami NGINX Ingress controller image version
## ref: https://hub.docker.com/r/bitnami/nginx-ingress-controller/tags/
## @param image.registry Nginx Ingress Controller image registry
## @param image.repository Nginx Ingress Controller image repository
## @param image.tag Nginx Ingress Controller image tag (immutable tags are recommended)
## @param image.pullPolicy Nginx Ingress Controller image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
##
image:
  registry: docker.io
  repository: bitnami/nginx-ingress-controller
  tag: 1.0.4-debian-10-r0
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent

## @param containerPorts [object] Controller container ports to open
##
containerPorts:
  http: 80
  https: 443
  metrics: 10254

## @param watchIngressWithoutClass Process Ingress objects without ingressClass annotation/ingressClassName field
##
watchIngressWithoutClass: false
## @param ingressClass Name of the ingress class to route through this controller
##
ingressClass: nginx

# This argument is required for the controller to register the 'nginx' ingress class (workaround for what might be a bug)
extraArgs:
  ingress-class-by-name: true

## @param replicaCount Desired number of Controller pods
##
replicaCount: 1

## @section Default backend parameters

## Default 404 backend
##
defaultBackend:
  ## @param defaultBackend.enabled Enable a default backend based on NGINX
  ##
  enabled: true
  ## Bitnami NGINX image
  ## ref: https://hub.docker.com/r/bitnami/nginx/tags/
  ## @param defaultBackend.image.registry Default backend image registry
  ## @param defaultBackend.image.repository Default backend image repository
  ## @param defaultBackend.image.tag Default backend image tag (immutable tags are recommended)
  ## @param defaultBackend.image.pullPolicy Image pull policy
  ## @param defaultBackend.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    registry: docker.io
    repository: bitnami/nginx
    tag: 1.21.3-debian-10-r34
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
  ## @param defaultBackend.replicaCount Desired number of default backend pods
  ##
  replicaCount: 1

## @section Traffic exposure parameters

## Service parameters
##
service:
  ## @param service.type Kubernetes Service type for Controller
  ##
  type: LoadBalancer
  
  ## @param service.externalTrafficPolicy Set external traffic policy to: "Local" to preserve source IP on providers supporting it
  ## Enable client source IP preservation
  ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
  ##
  externalTrafficPolicy: Local # enables client IP passthrough in 'X-Forwarder-For' header

## @section RBAC parameters

## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable the creation of a ServiceAccount for Controller pods
  ##
  create: true
  
## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  ## @param rbac.create Specifies whether RBAC rules should be created
  ##
  create: true

## @section Metrics parameters

## Prometheus exporter parameters
##
metrics:
  ## @param metrics.enabled Enable exposing Controller statistics
  ##
  enabled: false